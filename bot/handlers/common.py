from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from sqlalchemy.ext.asyncio import AsyncSession
from bot.keyboards.common import get_main_keyboard, get_habit_list_keyboard
from bot.fsm.habit import HabitCreation
from bot.services.habit import HabitService


# –°–æ–∑–¥–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —Ä–æ—É—Ç–µ—Ä –¥–ª—è –≤—Å–µ–≥–æ –º–æ–¥—É–ª—è
router = Router()

@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Strong Will Bot! ü¶æ\n\n"
        "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤–∞—à–∏ –ø—Ä–∏–≤—ã—á–∫–∏ –∏ –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø—É—Ç–∏.\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ:\n"
        "‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ 3 –ø—Ä–∏–≤—ã—á–µ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è\n"
        "üìä –ü—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å\n"
        "üìù –û—Ç–º–µ—á–∞—Ç—å —Å—Ä—ã–≤—ã\n"
        "üìà –°–º–æ—Ç—Ä–µ—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é –Ω–∏–∂–µ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏!",
        reply_markup=get_main_keyboard()
    )

@router.message(Command("help"))
async def cmd_help(message: Message):
    await message.answer(
        "üîç Here's what you can do:\n\n"
        "Commands:\n"
        "/start - Show main menu\n"
        "/habit_add - Create new habit\n"
        "/habits - List your habits\n"
        "/relapse - Log a relapse\n"
        "/history - View history\n\n"
        "Or use the buttons below üëá",
        reply_markup=get_main_keyboard()
    )

@router.message(Command("habit_add"))
@router.message(F.text == "‚ûï Add Habit")
async def start_new_habit(message: Message, state: FSMContext):
    await message.answer(
        "–ö–∞–∫—É—é –ø—Ä–∏–≤—ã—á–∫—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å? ü§î\n\n"
        "–ü—Ä–∏–º–µ—Ä—ã:\n"
        "- –ù–µ –∫—É—Ä–∏—Ç—å üö≠\n"
        "- –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è üèÉ‚Äç‚ôÇÔ∏è\n"
        "- –ú–µ–¥–∏—Ç–∞—Ü–∏—è üßò‚Äç‚ôÇÔ∏è\n"
        "- –ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ ü•ó\n\n"
        "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–≤—ã—á–∫–∏:"
    )
    await state.set_state(HabitCreation.waiting_for_name)

@router.message(F.text == "üìà Progress")
async def show_progress(message: Message, session: AsyncSession):
    habit_service = HabitService(session)
    habits = await habit_service.get_user_habits(message.from_user.id)
    
    if not habits:
        await message.answer(
            "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∏–≤—ã—á–µ–∫ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è!\n"
            "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ‚ûï Add Habit, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å."
        )
        return

    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–≤—ã—á–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:",
        reply_markup=get_habit_list_keyboard(habits)
    )
